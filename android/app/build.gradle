ext {
    cactusVersion = cactusVersion
}
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
//    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
    //TODO changed
    throw GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "top.mxlt.wechathelper"
//        minSdkVersion flutter.minSdkVersion
        //TODO 将minSdkVersion的值由flutter.minSdkVersion修改为18
//        minSdkVersion 18
        //uses-sdk:minSdkVersion 18 cannot be smaller than version 21 declared in library [:images_picker]
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
//        targetSdkVersion 20
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    signingConfigs {
        release {
            keyAlias 'key'
            keyPassword '你的'
            storeFile file('keystore/key.jks')
            storePassword '你的'
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            //关闭混淆
            minifyEnabled false
            //删除无用资源
            shrinkResources false
        }

        debug {
            //关闭混淆
            minifyEnabled false
            //删除无用资源
            signingConfig signingConfigs.release
        }
    }

//    dependencies {
////        implementation 'top.gyf.cactus:cactus-support:1.1.3-beta13'
//        implementation 'com.gyf.cactus:cactus:1.1.3-beta13'
//    }
//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.debug
//        }
//    }

}

flutter {
    source '../..'
}

dependencies {
    implementation 'com.gyf.cactus:cactus:1.1.3-beta13'
    implementation 'androidx.work:work-runtime:2.7.1'
}

